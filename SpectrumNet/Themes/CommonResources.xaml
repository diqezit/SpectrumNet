<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SpectrumNet"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    x:Class="SpectrumNet.CommonResources">

    <!-- =================== -->
    <!-- ОСНОВНЫЕ КОНСТАНТЫ -->
    <!-- =================== -->

    <!-- Стандартные размеры -->
    <sys:Double x:Key="SmallSize">4</sys:Double>
    <sys:Double x:Key="NormalSize">8</sys:Double>
    <sys:Double x:Key="MediumSize">12</sys:Double>
    <sys:Double x:Key="LargeSize">16</sys:Double>

    <CornerRadius x:Key="CornerRadiusSmall">4</CornerRadius>
    <CornerRadius x:Key="CornerRadiusMedium">6</CornerRadius>
    <CornerRadius x:Key="CornerRadiusLarge">12</CornerRadius>
    <CornerRadius x:Key="CornerRadiusRound">16</CornerRadius>

    <sys:Double x:Key="StandardButtonHeight">40</sys:Double>
    <sys:Double x:Key="StandardControlHeight">30</sys:Double>
    <sys:Double x:Key="CompactControlHeight">24</sys:Double>

    <sys:Double x:Key="SmallIconSize">16</sys:Double>
    <sys:Double x:Key="MediumIconSize">20</sys:Double>
    <sys:Double x:Key="LargeIconSize">24</sys:Double>

    <!-- Стандартные отступы -->
    <Thickness x:Key="NormalMargin">8,4</Thickness>
    <Thickness x:Key="SmallMargin">4,2</Thickness>
    <Thickness x:Key="StandardPadding">12,6</Thickness>
    <Thickness x:Key="StandardBorderThickness">1.5</Thickness>
    <Thickness x:Key="HeavyBorderThickness">2</Thickness>

    <!-- Макетные константы -->
    <GridLength x:Key="LabelColumnWidth">120</GridLength>
    <GridLength x:Key="ValueColumnWidth">40</GridLength>

    <!-- Анимационные константы -->
    <Duration x:Key="StandardAnimationDuration">0:0:0.3</Duration>
    <Duration x:Key="QuickAnimationDuration">0:0:0.15</Duration>
    <CubicEase x:Key="StandardEaseOut" EasingMode="EaseOut"/>
    <QuadraticEase x:Key="StandardEaseInOut" EasingMode="EaseInOut"/>

    <!-- Конвертеры -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!-- =================== -->
    <!-- СИСТЕМА ЦВЕТОВ     -->
    <!-- =================== -->

    <!-- Градиенты заголовка -->
    <LinearGradientBrush x:Key="LightTitleBarGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF8E00" Offset="0"/>
        <GradientStop Color="#FF6A00" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkTitleBarGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF333333" Offset="0"/>
        <GradientStop Color="#FF1A1A1A" Offset="1"/>
    </LinearGradientBrush>

    <!-- Общие базовые кисти -->
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#2A2A2A"/>
    <SolidColorBrush x:Key="ControlHoverBackgroundBrush" Color="#3C3C3C"/>
    <SolidColorBrush x:Key="ControlPressedBackgroundBrush" Color="#202020"/>
    <SolidColorBrush x:Key="ControlDisabledBackgroundBrush" Color="#292929"/>

    <SolidColorBrush x:Key="ControlBorderBrush" Color="#454545"/>
    <SolidColorBrush x:Key="ControlHoverBorderBrush" Color="#5A5A5A"/>
    <SolidColorBrush x:Key="ControlPressedBorderBrush" Color="#151515"/>
    <SolidColorBrush x:Key="ControlDisabledBorderBrush" Color="#353535"/>

    <SolidColorBrush x:Key="AccentBrush" Color="#FF6A00"/>
    <SolidColorBrush x:Key="AccentHoverBrush" Color="#FF8E00"/>
    <SolidColorBrush x:Key="FocusedBorderBrush" Color="#FF8E00"/>

    <!-- Производные кисти для компонентов -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#212121"/>
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#454545"/>
    <SolidColorBrush x:Key="SurfaceBrush" Color="#262626"/>
    <SolidColorBrush x:Key="DarkSurfaceBrush" Color="#1A1A1A"/>
    <SolidColorBrush x:Key="DarkPopupBorderBrush" Color="#303030"/>

    <SolidColorBrush x:Key="TextPrimaryBrush" Color="#E0E0E0"/>
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="#AAAAAA"/>
    <SolidColorBrush x:Key="LightTextPrimaryBrush" Color="#FFFFFF"/>

    <SolidColorBrush x:Key="WindowControlHoverBrush" Color="#3C3C3C"/>
    <SolidColorBrush x:Key="WindowControlPressedBrush" Color="#303030"/>
    <SolidColorBrush x:Key="CloseButtonHoverBrush" Color="#E81123"/>
    <SolidColorBrush x:Key="CloseButtonPressedBrush" Color="#F1707A"/>

    <!-- Кисти для конкретных элементов -->
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{Binding Source={StaticResource ControlBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{Binding Source={StaticResource ControlBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonForegroundBrush" Color="{Binding Source={StaticResource TextPrimaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{Binding Source={StaticResource ControlHoverBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{Binding Source={StaticResource ControlHoverBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonHoverForegroundBrush" Color="{Binding Source={StaticResource TextPrimaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ButtonPressedBrush" Color="{Binding Source={StaticResource ControlPressedBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{Binding Source={StaticResource ControlPressedBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonPressedForegroundBrush" Color="{Binding Source={StaticResource TextPrimaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ButtonDisabledBackgroundBrush" Color="{Binding Source={StaticResource ControlDisabledBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonDisabledBorderBrush" Color="{Binding Source={StaticResource ControlDisabledBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ButtonDisabledForegroundBrush" Color="{Binding Source={StaticResource TextSecondaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="CheckBoxForegroundBrush" Color="{Binding Source={StaticResource TextPrimaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="SliderBackgroundBrush" Color="#333333"/>
    <SolidColorBrush x:Key="SliderBorderBrush" Color="#454545"/>
    <SolidColorBrush x:Key="SliderForegroundBrush" Color="{Binding Source={StaticResource AccentBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ComboBoxBackgroundBrush" Color="{Binding Source={StaticResource ControlBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="{Binding Source={StaticResource ControlBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ComboBoxForegroundBrush" Color="{Binding Source={StaticResource TextPrimaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ComboBoxHoverBackgroundBrush" Color="{Binding Source={StaticResource ControlHoverBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ComboBoxHoverBorderBrush" Color="{Binding Source={StaticResource ControlHoverBorderBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ComboBoxPressedBackgroundBrush" Color="{Binding Source={StaticResource ControlPressedBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ComboBoxPressedBorderBrush" Color="{Binding Source={StaticResource ControlPressedBorderBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="{Binding Source={StaticResource ControlDisabledBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="{Binding Source={StaticResource ControlDisabledBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="{Binding Source={StaticResource TextSecondaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="ComboBoxPopupBackgroundBrush" Color="#262626"/>
    <SolidColorBrush x:Key="ComboBoxPopupBorderBrush" Color="#454545"/>
    <SolidColorBrush x:Key="ComboBoxItemHoverBackgroundBrush" Color="#3C3C3C"/>
    <SolidColorBrush x:Key="ComboBoxItemSelectedBackgroundBrush" Color="#2A2A2A"/>

    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{Binding Source={StaticResource ControlBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{Binding Source={StaticResource ControlBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="TextBoxForegroundBrush" Color="{Binding Source={StaticResource TextPrimaryBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{Binding Source={StaticResource ControlHoverBorderBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="TextBoxFocusBorderBrush" Color="{Binding Source={StaticResource AccentBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="TextBoxDisabledBackgroundBrush" Color="{Binding Source={StaticResource ControlDisabledBackgroundBrush}, Path=Color}"/>
    <SolidColorBrush x:Key="TextBoxDisabledForegroundBrush" Color="{Binding Source={StaticResource TextSecondaryBrush}, Path=Color}"/>

    <SolidColorBrush x:Key="BackgroundBrush" Color="#151515"/>

    <!-- Кисти для заголовка приложения с учетом темы -->
    <SolidColorBrush x:Key="TitleGlowBrush" Color="#80FF6A00"/>

    <!-- =================== -->
    <!-- ОБЩИЕ ШАБЛОНЫ      -->
    <!-- =================== -->

    <!-- Общие анимации -->
    <Storyboard x:Key="FadeInStoryboard">
        <DoubleAnimation 
            Storyboard.TargetProperty="Opacity"
            From="0" To="1"
            Duration="{StaticResource StandardAnimationDuration}"
            EasingFunction="{StaticResource StandardEaseOut}"/>
    </Storyboard>

    <Storyboard x:Key="ScaleInStoryboard">
        <DoubleAnimation 
            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
            From="0.7" To="1"
            Duration="{StaticResource StandardAnimationDuration}"
            EasingFunction="{StaticResource StandardEaseOut}"/>
        <DoubleAnimation 
            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
            From="0.7" To="1"
            Duration="{StaticResource StandardAnimationDuration}"
            EasingFunction="{StaticResource StandardEaseOut}"/>
    </Storyboard>

    <!-- Шаблон для строки настроек со слайдером -->
    <ControlTemplate x:Key="SliderSettingRowTemplate">
        <Grid Margin="0,0,0,12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource LabelColumnWidth}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{StaticResource ValueColumnWidth}"/>
            </Grid.ColumnDefinitions>

            <TextBlock 
                Grid.Column="0"
                Text="{TemplateBinding Tag}"
                Foreground="{DynamicResource TextPrimaryBrush}"
                Margin="0,0,10,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"/>

            <Slider 
                Grid.Column="1"
                Style="{DynamicResource ModernSliderStyle}"
                Height="20"
                Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}"
                Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}"
                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}"
                VerticalAlignment="Center"/>

            <TextBlock 
                Grid.Column="2"
                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, StringFormat='{}{0:F1}'}"
                Foreground="{DynamicResource TextPrimaryBrush}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"/>
        </Grid>
    </ControlTemplate>

    <!-- Шаблон для кнопки с иконкой -->
    <ControlTemplate x:Key="IconButtonTemplate" TargetType="Button">
        <Grid>
            <Border x:Name="ButtonBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{StaticResource CornerRadiusMedium}">
                <Grid>
                    <Border x:Name="HighlightBorder"
                        CornerRadius="5,5,0,0"
                        Height="12"
                        VerticalAlignment="Top">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#30FFFFFF" Offset="0"/>
                                <GradientStop Color="#00FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <StackPanel 
                        Orientation="Horizontal"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        Margin="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="IconPresenter"
                            Content="{TemplateBinding Tag}"
                            Width="{StaticResource SmallIconSize}"
                            Height="{StaticResource SmallIconSize}"
                            Margin="0,0,8,0"/>
                        <ContentPresenter x:Name="TextPresenter"
                            Content="{TemplateBinding Content}"
                            RecognizesAccessKey="True"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource ButtonHoverBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonHoverForegroundBrush}"/>
                <Setter TargetName="TextPresenter" Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="-1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundBrush}"/>
                <Setter TargetName="TextPresenter" Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="1"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HighlightBorder" Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource FocusedBorderBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="{StaticResource HeavyBorderThickness}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}"/>
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                <Setter TargetName="HighlightBorder" Property="Opacity" Value="0.3"/>
                <Setter TargetName="TextPresenter" Property="Opacity" Value="0.6"/>
                <Setter TargetName="IconPresenter" Property="Opacity" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- =================== -->
    <!-- БАЗОВЫЕ СТИЛИ      -->
    <!-- =================== -->

    <!-- Базовый стиль для кнопок -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <!-- Базовый стиль для интерактивных контролов -->
    <Style x:Key="InteractiveControlBaseStyle">
        <Setter Property="Control.Cursor" Value="Hand"/>
        <Setter Property="Control.FontSize" Value="14"/>
        <Setter Property="Control.FontWeight" Value="Regular"/>
        <Setter Property="Control.FontFamily" Value="Segoe UI"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <!-- =================== -->
    <!-- СТИЛИ КОМПОНЕНТОВ  -->
    <!-- =================== -->

    <!-- Стиль панели заголовка с поддержкой переключения темы -->
    <Style x:Key="TitleBarBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightTitleBarGradientBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:ThemeManager.Instance}, Path=IsDarkTheme}" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkTitleBarGradientBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль кнопок управления окном -->
    <Style x:Key="WindowControlButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse x:Name="ButtonBackground" Fill="Transparent"/>
                        <ContentPresenter x:Name="ContentPresenter"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Fill" Value="{DynamicResource WindowControlHoverBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Fill" Value="{DynamicResource WindowControlPressedBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" CenterX="10" CenterY="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль кнопки закрытия окна -->
    <Style x:Key="WindowCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse x:Name="ButtonBackground" Fill="Transparent"/>
                        <ContentPresenter x:Name="ContentPresenter"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Fill" Value="{DynamicResource CloseButtonHoverBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Fill" Value="{DynamicResource CloseButtonPressedBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" CenterX="10" CenterY="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль современной кнопки -->
    <Style x:Key="ModernButtonStyle" TargetType="Button" BasedOn="{StaticResource InteractiveControlBaseStyle}">
        <Setter Property="BorderThickness" Value="{StaticResource StandardBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource StandardPadding}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource CornerRadiusMedium}">
                            <Grid>
                                <Border x:Name="HighlightBorder"
                                    CornerRadius="5,5,0,0"
                                    Height="12"
                                    VerticalAlignment="Top">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#30FFFFFF" Offset="0"/>
                                            <GradientStop Color="#00FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter x:Name="ContentPresenter"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource ButtonHoverBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonHoverForegroundBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="-1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HighlightBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource FocusedBorderBrush}"/>
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="{StaticResource HeavyBorderThickness}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}"/>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                            <Setter TargetName="HighlightBorder" Property="Opacity" Value="0.3"/>
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль кнопки с иконкой -->
    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
        <Setter Property="Template" Value="{StaticResource IconButtonTemplate}"/>
    </Style>

    <!-- Стиль для заголовка "Spectrum Analyser" -->
    <Style x:Key="SpectrumAnalyserTitleStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <TextBlock 
                            Text="{TemplateBinding Content}"
                            FontSize="22" FontWeight="Bold" FontFamily="Segoe UI"
                            Foreground="{DynamicResource TitleGlowBrush}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Margin="0,1,0,0">
                            <TextBlock.Effect>
                                <BlurEffect Radius="5"/>
                            </TextBlock.Effect>
                        </TextBlock>

                        <TextBlock x:Name="MainText"
                            Text="{TemplateBinding Content}"
                            FontSize="22" FontWeight="Bold" FontFamily="Segoe UI"
                            HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Foreground>
                                <LinearGradientBrush x:Name="TextGradient" StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop x:Name="GradientStop1" Color="{DynamicResource TitleGradientColor1}" Offset="0"/>
                                    <GradientStop x:Name="GradientStop2" Color="{DynamicResource TitleGradientColor2}" Offset="0.5"/>
                                    <GradientStop x:Name="GradientStop3" Color="{DynamicResource TitleGradientColor3}" Offset="1"/>
                                </LinearGradientBrush>
                            </TextBlock.Foreground>
                            <TextBlock.Effect>
                                <DropShadowEffect 
                                    ShadowDepth="1" BlurRadius="3" Opacity="0.5" 
                                    Color="{DynamicResource TitleShadowColor}"/>
                            </TextBlock.Effect>
                        </TextBlock>

                        <Border x:Name="Underline"
                            Height="1" Width="0" 
                            Margin="0,28,0,0" 
                            HorizontalAlignment="Center">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="{DynamicResource TitleUnderlineTransparent}" Offset="0"/>
                                    <GradientStop Color="{DynamicResource TitleUnderlineSolid}" Offset="0.5"/>
                                    <GradientStop Color="{DynamicResource TitleUnderlineTransparent}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ContentControl.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <PointAnimation 
                                        Storyboard.TargetName="TextGradient"
                                        Storyboard.TargetProperty="StartPoint"
                                        From="0,0" To="1,0" 
                                        Duration="0:0:5" 
                                        RepeatBehavior="Forever" 
                                        AutoReverse="True"/>
                                    <PointAnimation 
                                        Storyboard.TargetName="TextGradient"
                                        Storyboard.TargetProperty="EndPoint"
                                        From="1,1" To="0,1" 
                                        Duration="0:0:5" 
                                        RepeatBehavior="Forever" 
                                        AutoReverse="True"/>

                                    <DoubleAnimation 
                                        Storyboard.TargetName="Underline"
                                        Storyboard.TargetProperty="Width"
                                        From="0" To="180" 
                                        Duration="0:0:0.5"
                                        BeginTime="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль переключателя темы (ThemeSwitch) -->
    <Style x:Key="ThemeSwitchStyle" TargetType="ToggleButton">
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="#FFE0E0E0"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="BorderBrush" Value="#FF808080"/>
        <Setter Property="BorderThickness" Value="{StaticResource StandardBorderThickness}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="SwitchBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="14"
                            Padding="{TemplateBinding Padding}">
                            <Border x:Name="InnerGlow" 
                                Background="Transparent" 
                                CornerRadius="12.5" 
                                Opacity="0">
                                <Border.Effect>
                                    <BlurEffect Radius="8"/>
                                </Border.Effect>
                            </Border>
                        </Border>

                        <Grid x:Name="ToggleIndicator"
                            Width="22" Height="22"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="3,0,0,0">
                            <Ellipse x:Name="IndicatorBackground">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop x:Name="IndicatorGradientStop1" Color="#FFFFF176" Offset="0"/>
                                        <GradientStop x:Name="IndicatorGradientStop2" Color="#FFFFB74D" Offset="1"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                                <Ellipse.Effect>
                                    <DropShadowEffect x:Name="IndicatorShadow" 
                                        ShadowDepth="1" BlurRadius="3" 
                                        Opacity="0.3" Color="#FF000000"/>
                                </Ellipse.Effect>
                            </Ellipse>

                            <Path x:Name="SunIndicator"
                                Width="16" Height="16"
                                StrokeLineJoin="Round"
                                StrokeEndLineCap="Round"
                                StrokeStartLineCap="Round"
                                Opacity="1"
                                RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform x:Name="SunScaleTransform" ScaleX="1" ScaleY="1"/>
                                        <RotateTransform x:Name="SunRotateTransform" Angle="0"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                                <Path.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="0.5" RadiusY="0.5">
                                        <GradientStop Color="#FFFFF200" Offset="0"/>
                                        <GradientStop Color="#FFFF9800" Offset="1"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                                <Path.Stroke>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#FFFF9800" Offset="0"/>
                                        <GradientStop Color="#FFFF5722" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Stroke>
                                <Path.StrokeThickness>0.7</Path.StrokeThickness>
                                <Path.Data>
                                    <GeometryGroup>
                                        <EllipseGeometry Center="8,8" RadiusX="4" RadiusY="4"/>
                                        <LineGeometry StartPoint="8,1" EndPoint="8,3"/>
                                        <LineGeometry StartPoint="8,13" EndPoint="8,15"/>
                                        <LineGeometry StartPoint="1,8" EndPoint="3,8"/>
                                        <LineGeometry StartPoint="13,8" EndPoint="15,8"/>
                                        <LineGeometry StartPoint="3.1,3.1" EndPoint="4.5,4.5"/>
                                        <LineGeometry StartPoint="11.5,11.5" EndPoint="12.9,12.9"/>
                                        <LineGeometry StartPoint="3.1,12.9" EndPoint="4.5,11.5"/>
                                        <LineGeometry StartPoint="11.5,4.5" EndPoint="12.9,3.1"/>
                                    </GeometryGroup>
                                </Path.Data>
                                <Path.Effect>
                                    <DropShadowEffect x:Name="SunGlowEffect" 
                                        ShadowDepth="0" BlurRadius="5" 
                                        Opacity="0.7" Color="#FFFF9800"/>
                                </Path.Effect>
                            </Path>

                            <Path x:Name="MoonIndicator"
                                Width="16" Height="16"
                                StrokeLineJoin="Round"
                                StrokeEndLineCap="Round"
                                Opacity="0"
                                RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform x:Name="MoonScaleTransform" ScaleX="0.8" ScaleY="0.8"/>
                                        <RotateTransform x:Name="MoonRotateTransform" Angle="-30"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#FF9FA8DA" Offset="0"/>
                                        <GradientStop Color="#FF5C6BC0" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                                <Path.Stroke>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#FF3F51B5" Offset="0"/>
                                        <GradientStop Color="#FF303F9F" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Stroke>
                                <Path.StrokeThickness>0.7</Path.StrokeThickness>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="12,3">
                                            <PathFigure.Segments>
                                                <ArcSegment Point="12,13" Size="5,5" IsLargeArc="True" SweepDirection="Clockwise"/>
                                                <ArcSegment Point="6,8" Size="4.5,6" IsLargeArc="False" SweepDirection="Clockwise"/>
                                                <ArcSegment Point="12,3" Size="6,5" IsLargeArc="False" SweepDirection="Clockwise"/>
                                            </PathFigure.Segments>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.Effect>
                                    <DropShadowEffect x:Name="MoonGlowEffect" 
                                        Color="#FF9FA8DA" BlurRadius="5" 
                                        ShadowDepth="0" Opacity="0.5"/>
                                </Path.Effect>
                            </Path>

                            <Canvas x:Name="StarsCanvas" Opacity="0">
                                <Path x:Name="Star1" 
                                    Fill="#FFFFFFFF" 
                                    Data="M3,3 L3.5,1 L4,3 L6,3.5 L4,4 L3.5,6 L3,4 L1,3.5 Z" 
                                    RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <ScaleTransform x:Name="Star1Scale" ScaleX="1" ScaleY="1"/>
                                    </Path.RenderTransform>
                                    <Path.Effect>
                                        <DropShadowEffect Color="#FFFFFFFF" BlurRadius="2" ShadowDepth="0" Opacity="0.8"/>
                                    </Path.Effect>
                                </Path>
                                <Path x:Name="Star2" 
                                    Fill="#FFF5F5F5" 
                                    Data="M10,1 L10.3,0 L10.6,1 L11.5,1.3 L10.6,1.6 L10.3,2.5 L10,1.6 L9,1.3 Z" 
                                    RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <ScaleTransform x:Name="Star2Scale" ScaleX="1" ScaleY="1"/>
                                    </Path.RenderTransform>
                                    <Path.Effect>
                                        <DropShadowEffect Color="#FFFFFFFF" BlurRadius="1.5" ShadowDepth="0" Opacity="0.7"/>
                                    </Path.Effect>
                                </Path>
                            </Canvas>

                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="IndicatorTransform"/>
                            </Grid.RenderTransform>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="DarkThemeAnimation">
                                    <Storyboard>
                                        <!-- Группа основных анимаций -->
                                        <ParallelTimeline>
                                            <!-- Анимация индикатора -->
                                            <DoubleAnimation 
                                                Storyboard.TargetName="IndicatorTransform"
                                                Storyboard.TargetProperty="X"
                                                To="28" Duration="{StaticResource StandardAnimationDuration}"
                                                EasingFunction="{StaticResource StandardEaseInOut}"/>

                                            <!-- Анимация фона -->
                                            <ColorAnimation 
                                                Storyboard.TargetName="SwitchBorder"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#FF3F51B5" Duration="{StaticResource StandardAnimationDuration}"/>

                                            <!-- Анимация свечения -->
                                            <ColorAnimation 
                                                Storyboard.TargetName="InnerGlow"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#7F5C6BC0" Duration="{StaticResource StandardAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="InnerGlow"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1" Duration="{StaticResource StandardAnimationDuration}"/>
                                        </ParallelTimeline>

                                        <!-- Анимация исчезновения солнца -->
                                        <ParallelTimeline>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunIndicator"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" Duration="{StaticResource QuickAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunRotateTransform"
                                                Storyboard.TargetProperty="Angle"
                                                To="90" Duration="{StaticResource QuickAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunScaleTransform"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="0.5" Duration="{StaticResource QuickAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunScaleTransform"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="0.5" Duration="{StaticResource QuickAnimationDuration}"/>
                                        </ParallelTimeline>

                                        <!-- Анимация появления луны -->
                                        <ParallelTimeline BeginTime="0:0:0.2">
                                            <DoubleAnimation 
                                                Storyboard.TargetName="MoonIndicator"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0" To="1" Duration="{StaticResource QuickAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="MoonRotateTransform"
                                                Storyboard.TargetProperty="Angle"
                                                From="-30" To="0" Duration="{StaticResource StandardAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="MoonScaleTransform"
                                                Storyboard.TargetProperty="ScaleX"
                                                From="0.8" To="1" Duration="{StaticResource StandardAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="MoonScaleTransform"
                                                Storyboard.TargetProperty="ScaleY"
                                                From="0.8" To="1" Duration="{StaticResource StandardAnimationDuration}"/>
                                        </ParallelTimeline>

                                        <!-- Анимация появления звезд -->
                                        <DoubleAnimation 
                                            Storyboard.TargetName="StarsCanvas"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0" To="1"
                                            BeginTime="0:0:0.3"
                                            Duration="{StaticResource QuickAnimationDuration}"/>

                                        <!-- Анимация цвета индикатора -->
                                        <ColorAnimation 
                                            Storyboard.TargetName="IndicatorGradientStop1"
                                            Storyboard.TargetProperty="Color"
                                            To="#FF7986CB" Duration="{StaticResource StandardAnimationDuration}"/>

                                        <ColorAnimation 
                                            Storyboard.TargetName="IndicatorGradientStop2"
                                            Storyboard.TargetProperty="Color"
                                            To="#FF5C6BC0" Duration="{StaticResource StandardAnimationDuration}"/>

                                        <ColorAnimation 
                                            Storyboard.TargetName="IndicatorShadow"
                                            Storyboard.TargetProperty="Color"
                                            To="#FF303F9F" Duration="{StaticResource StandardAnimationDuration}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="LightThemeAnimation">
                                    <Storyboard>
                                        <!-- Группа основных анимаций -->
                                        <ParallelTimeline>
                                            <!-- Анимация индикатора -->
                                            <DoubleAnimation 
                                                Storyboard.TargetName="IndicatorTransform"
                                                Storyboard.TargetProperty="X"
                                                To="0" Duration="{StaticResource StandardAnimationDuration}"
                                                EasingFunction="{StaticResource StandardEaseInOut}"/>

                                            <!-- Анимация фона -->
                                            <ColorAnimation 
                                                Storyboard.TargetName="SwitchBorder"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#FFE0E0E0" Duration="{StaticResource StandardAnimationDuration}"/>

                                            <!-- Анимация свечения -->
                                            <DoubleAnimation 
                                                Storyboard.TargetName="InnerGlow"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" Duration="{StaticResource QuickAnimationDuration}"/>
                                        </ParallelTimeline>

                                        <!-- Остановка анимации звезд -->
                                        <ParallelTimeline>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="StarsCanvas"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" Duration="{StaticResource QuickAnimationDuration}"/>
                                        </ParallelTimeline>

                                        <!-- Анимация исчезновения луны -->
                                        <ParallelTimeline>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="MoonIndicator"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" Duration="{StaticResource QuickAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="MoonRotateTransform"
                                                Storyboard.TargetProperty="Angle"
                                                To="30" Duration="{StaticResource QuickAnimationDuration}"/>
                                        </ParallelTimeline>

                                        <!-- Анимация появления солнца -->
                                        <ParallelTimeline BeginTime="0:0:0.2">
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunIndicator"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0" To="1" Duration="{StaticResource QuickAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunRotateTransform"
                                                Storyboard.TargetProperty="Angle"
                                                From="-90" To="0" Duration="{StaticResource StandardAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunScaleTransform"
                                                Storyboard.TargetProperty="ScaleX"
                                                From="0.5" To="1" Duration="{StaticResource StandardAnimationDuration}"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="SunScaleTransform"
                                                Storyboard.TargetProperty="ScaleY"
                                                From="0.5" To="1" Duration="{StaticResource StandardAnimationDuration}"/>
                                        </ParallelTimeline>

                                        <!-- Анимация цвета индикатора -->
                                        <ColorAnimation 
                                            Storyboard.TargetName="IndicatorGradientStop1"
                                            Storyboard.TargetProperty="Color"
                                            To="#FFFFF176" Duration="{StaticResource StandardAnimationDuration}"/>

                                        <ColorAnimation 
                                            Storyboard.TargetName="IndicatorGradientStop2"
                                            Storyboard.TargetProperty="Color"
                                            To="#FFFFB74D" Duration="{StaticResource StandardAnimationDuration}"/>

                                        <ColorAnimation 
                                            Storyboard.TargetName="IndicatorShadow"
                                            Storyboard.TargetProperty="Color"
                                            To="#FF000000" Duration="{StaticResource StandardAnimationDuration}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Современный стиль для чекбокса -->
    <Style x:Key="ModernCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource InteractiveControlBaseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="CheckBoxBorder"
                            Width="18" Height="18"
                            CornerRadius="{StaticResource CornerRadiusSmall}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{StaticResource StandardBorderThickness}"
                            Margin="0,0,8,0">
                            <Path x:Name="CheckMark"
                                Data="M3,9 L7,13 L15,5"
                                Stroke="{DynamicResource AccentBrush}"
                                StrokeThickness="2"
                                StrokeEndLineCap="Round"
                                StrokeStartLineCap="Round"
                                Opacity="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>

                        <ContentPresenter 
                            Grid.Column="1"
                            Content="{TemplateBinding Content}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Opacity" Value="1"/>
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckBoxBorder" Property="Opacity" Value="0.5"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль современного слайдера -->
    <Style x:Key="ModernSliderStyle" TargetType="Slider" BasedOn="{StaticResource InteractiveControlBaseStyle}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource SliderForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource SliderBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SliderBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TickPlacement" Value="BottomRight"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Border x:Name="TrackBackground"
                            Background="{TemplateBinding Background}"
                            Height="6" VerticalAlignment="Center"
                            CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                            <Border 
                                Height="3" VerticalAlignment="Top"
                                CornerRadius="2,2,0,0" Margin="0,0,0,0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#20FFFFFF" Offset="0"/>
                                        <GradientStop Color="#00FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>

                        <TickBar x:Name="TopTick" 
                            Visibility="Collapsed"
                            Fill="{DynamicResource TextSecondaryBrush}"
                            Placement="Top"
                            Height="4" Margin="0,-10,0,0"
                            SnapsToDevicePixels="True"/>

                        <TickBar x:Name="BottomTick"
                            Visibility="Collapsed"
                            Fill="{DynamicResource TextSecondaryBrush}"
                            Placement="Bottom"
                            Height="4" Margin="0,0,0,-10"
                            SnapsToDevicePixels="True"/>

                        <Track Name="PART_Track"
                            Minimum="{TemplateBinding Minimum}"
                            Maximum="{TemplateBinding Maximum}"
                            Value="{TemplateBinding Value}"
                            IsDirectionReversed="False">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="DecreaseButton"
                                    Style="{x:Null}"
                                    Height="6" VerticalAlignment="Center"
                                    Focusable="False"
                                    Background="{TemplateBinding Foreground}">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border x:Name="DecreaseTrack"
                                                Background="{TemplateBinding Background}"
                                                CornerRadius="3,0,0,3"
                                                Height="6">
                                                <Border 
                                                    Height="3" VerticalAlignment="Top"
                                                    CornerRadius="2,0,0,0" Margin="0,0,0,0">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Color="#40FFFFFF" Offset="0"/>
                                                            <GradientStop Color="#00FFFFFF" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="IncreaseButton"
                                    Style="{x:Null}"
                                    Height="6" VerticalAlignment="Center"
                                    Focusable="False"
                                    Background="Transparent">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="Transparent" CornerRadius="0,3,3,0"/>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="SliderThumb" 
                                    Width="16" Height="16" 
                                    Cursor="Hand" Focusable="False">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid>
                                                <Ellipse x:Name="ThumbBackground"
                                                    Fill="{DynamicResource SliderForegroundBrush}" 
                                                    Width="16" Height="16"/>
                                                <Ellipse x:Name="ThumbHighlight"
                                                    Fill="White" Opacity="0.3"
                                                    Width="8" Height="8"/>
                                                <Ellipse x:Name="FocusRing"
                                                    Stroke="{DynamicResource FocusedBorderBrush}"
                                                    StrokeThickness="1"
                                                    Width="20" Height="20"
                                                    Opacity="0"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ThumbBackground" Property="Width" Value="18"/>
                                                    <Setter TargetName="ThumbBackground" Property="Height" Value="18"/>
                                                    <Setter TargetName="ThumbHighlight" Property="Width" Value="9"/>
                                                    <Setter TargetName="ThumbHighlight" Property="Height" Value="9"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseCaptured" Value="True">
                                                    <Setter TargetName="ThumbBackground" Property="Width" Value="14"/>
                                                    <Setter TargetName="ThumbBackground" Property="Height" Value="14"/>
                                                    <Setter TargetName="ThumbHighlight" Property="Width" Value="7"/>
                                                    <Setter TargetName="ThumbHighlight" Property="Height" Value="7"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter TargetName="FocusRing" Property="Opacity" Value="1"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>

                        <Popup x:Name="ValuePopup" 
                            PlacementTarget="{Binding ElementName=SliderThumb}"
                            Placement="Top"
                            AllowsTransparency="True"
                            PopupAnimation="Fade"
                            IsOpen="False">
                            <Border 
                                Background="{DynamicResource AccentBrush}"
                                CornerRadius="{StaticResource CornerRadiusSmall}"
                                Padding="6,2">
                                <TextBlock x:Name="ValueText"
                                    Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat='{}{0:F1}'}"
                                    Foreground="White"
                                    FontWeight="SemiBold" FontSize="12"
                                    HorizontalAlignment="Center"/>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TrackBackground" Property="BorderBrush" Value="{DynamicResource ComboBoxHoverBorderBrush}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Thumb.DragStarted" SourceName="SliderThumb">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames 
                                        Storyboard.TargetName="ValuePopup"
                                        Storyboard.TargetProperty="IsOpen">
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Thumb.DragCompleted" SourceName="SliderThumb">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames 
                                        Storyboard.TargetName="ValuePopup"
                                        Storyboard.TargetProperty="IsOpen">
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0.5" Value="False"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="TrackBackground" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="PART_Track" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="PreviewMouseWheel" Handler="Slider_MouseWheelScroll"/>
    </Style>

    <!-- Стиль современного комбобокса -->
    <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource InteractiveControlBaseStyle}">
        <Setter Property="Padding" Value="{StaticResource StandardPadding}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource StandardBorderThickness}"/>
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>

                                        <Border x:Name="ToggleBorder"
                                            Grid.ColumnSpan="2"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{StaticResource CornerRadiusMedium}"/>

                                        <Border x:Name="HighlightBorder"
                                            Grid.ColumnSpan="2"
                                            CornerRadius="5,5,0,0"
                                            Height="12"
                                            VerticalAlignment="Top">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <GradientStop Color="#30FFFFFF" Offset="0"/>
                                                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>

                                        <ContentPresenter 
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center" 
                                            Margin="2"/>

                                        <Border x:Name="ArrowBorder"
                                            Grid.Column="1"
                                            Width="20" Height="20"
                                            Background="Transparent"
                                            CornerRadius="10"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                            <Path x:Name="Arrow"
                                                Fill="{TemplateBinding Foreground}"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M 0 0 L 6 6 L 12 0 Z"
                                                RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <RotateTransform x:Name="ArrowRotation" Angle="0"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ComboBoxHoverBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxHoverBorderBrush}"/>
                                            <Setter TargetName="ArrowBorder" Property="Background" Value="{DynamicResource ComboBoxHoverBackgroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ComboBoxPressedBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxPressedBorderBrush}"/>
                                            <Setter TargetName="ArrowBorder" Property="Background" Value="{DynamicResource ComboBoxPressedBackgroundBrush}"/>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation 
                                                            Storyboard.TargetName="ArrowRotation"
                                                            Storyboard.TargetProperty="Angle"
                                                            To="180" Duration="{StaticResource QuickAnimationDuration}"
                                                            EasingFunction="{StaticResource StandardEaseInOut}"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation 
                                                            Storyboard.TargetName="ArrowRotation"
                                                            Storyboard.TargetProperty="Angle"
                                                            To="0" Duration="{StaticResource QuickAnimationDuration}"
                                                            EasingFunction="{StaticResource StandardEaseInOut}"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                                            <Setter Property="Background" Value="{DynamicResource ComboBoxDisabledBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxDisabledBorderBrush}"/>
                                            <Setter TargetName="HighlightBorder" Property="Opacity" Value="0.3"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="12,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>

                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="4,4,24,4"
                            Focusable="True"
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border x:Name="DropDownBorder"
                                    Background="{DynamicResource ComboBoxPopupBackgroundBrush}"
                                    BorderBrush="{DynamicResource ComboBoxPopupBorderBrush}"
                                    BorderThickness="{StaticResource StandardBorderThickness}"
                                    CornerRadius="{StaticResource CornerRadiusMedium}"
                                    Margin="0,4,0,0">
                                    <Border.Resources>
                                        <Style x:Key="DropdownArrowStyle" TargetType="Path">
                                            <Setter Property="Data" Value="M 0 10 L 10 0 L 20 10 Z"/>
                                            <Setter Property="Fill" Value="{Binding Background, ElementName=DropDownBorder}"/>
                                            <Setter Property="Stroke" Value="{Binding BorderBrush, ElementName=DropDownBorder}"/>
                                            <Setter Property="StrokeThickness" Value="1.5"/>
                                            <Setter Property="Width" Value="20"/>
                                            <Setter Property="Height" Value="10"/>
                                            <Setter Property="Margin" Value="0,-10,0,0"/>
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="VerticalAlignment" Value="Top"/>
                                            <Setter Property="Canvas.Left" Value="20"/>
                                        </Style>
                                    </Border.Resources>

                                    <Grid>
                                        <Canvas Height="10" VerticalAlignment="Top">
                                            <Path Style="{StaticResource DropdownArrowStyle}"/>
                                        </Canvas>

                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel 
                                                IsItemsHost="True" 
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                Background="Transparent">
                                                <StackPanel.Resources>
                                                    <Style TargetType="ComboBoxItem">
                                                        <Setter Property="Padding" Value="8,6"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="ComboBoxItem">
                                                                    <Border x:Name="ItemBorder"
                                                                        Background="Transparent"
                                                                        BorderThickness="0"
                                                                        CornerRadius="{StaticResource CornerRadiusSmall}"
                                                                        Padding="{TemplateBinding Padding}">
                                                                        <Grid>
                                                                            <ContentPresenter x:Name="ItemContent"/>
                                                                            <Border x:Name="SelectionIndicator"
                                                                                Width="3"
                                                                                HorizontalAlignment="Left"
                                                                                Margin="-8,0,0,0"
                                                                                Background="{DynamicResource AccentBrush}"
                                                                                Opacity="0"/>
                                                                        </Grid>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter TargetName="ItemBorder" Property="Background" 
                                                                                Value="{DynamicResource ComboBoxItemHoverBackgroundBrush}"/>
                                                                            <Setter TargetName="ItemContent" Property="RenderTransform">
                                                                                <Setter.Value>
                                                                                    <TranslateTransform X="2"/>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="IsSelected" Value="True">
                                                                            <Setter TargetName="ItemBorder" Property="Background" 
                                                                                Value="{DynamicResource ComboBoxItemSelectedBackgroundBrush}"/>
                                                                            <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1"/>
                                                                            <Setter TargetName="ItemContent" Property="RenderTransform">
                                                                                <Setter.Value>
                                                                                    <TranslateTransform X="2"/>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter TargetName="ItemBorder" Property="Background" 
                                                                                    Value="{DynamicResource ButtonPressedBrush}"/>
                                                                        </MultiTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </StackPanel.Resources>
                                            </StackPanel>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="ToggleButton" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="-1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource ComboBoxHoverBorderBrush}"/>
                            <Setter TargetName="ContentSite" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="2" Y="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource FocusedBorderBrush}"/>
                            <Setter TargetName="ToggleButton" Property="BorderThickness" Value="{StaticResource HeavyBorderThickness}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButton" Property="Opacity" Value="0.6"/>
                            <Setter TargetName="ContentSite" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для кнопки избранного -->
    <Style x:Key="FavoriteButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Content" Value="☆"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                    Background="Transparent"
                    CornerRadius="{StaticResource CornerRadiusSmall}"
                    Padding="2">
                        <ContentPresenter x:Name="ContentPresenter"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#0FFFFFFF"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.2" ScaleY="1.2" CenterX="10" CenterY="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#1FFFFFFF"/>
                            <Setter TargetName="ContentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" CenterX="10" CenterY="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource IsFavoriteConverter}}" Value="True">
                <Setter Property="Content" Value="★"/>
                <Setter Property="Foreground" Value="Gold"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для Thumb в ScrollBar -->
    <Style x:Key="ScrollBarThumbStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource CornerRadiusMedium}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentHoverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для ScrollBar -->
    <Style x:Key="ModernScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="MinWidth" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для TextBox -->
    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource InteractiveControlBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource StandardBorderThickness}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="TextBoxBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource CornerRadiusMedium}">
                        <ScrollViewer x:Name="PART_ContentHost"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>