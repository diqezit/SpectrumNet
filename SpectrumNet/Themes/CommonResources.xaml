<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SpectrumNet"
    x:Class="SpectrumNet.CommonResources">

    <!-- Объединённые словари для тем -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/darktheme.xaml"/>
        <ResourceDictionary Source="/Themes/lighttheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Ресурсы преобразователя -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!-- Градиенты для панели заголовка -->
    <LinearGradientBrush x:Key="LightTitleBarGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF8E00" Offset="0"/>
        <GradientStop Color="#FF6A00" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkTitleBarGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF333333" Offset="0"/>
        <GradientStop Color="#FF1A1A1A" Offset="1"/>
    </LinearGradientBrush>

    <!-- Стиль панели заголовка -->
    <Style x:Key="TitleBarBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightTitleBarGradientBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:ThemeManager.Instance}, Path=IsDarkTheme}" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkTitleBarGradientBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль кнопок управления окном -->
    <Style x:Key="WindowControlButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Кеширование статичного содержимого для снижения нагрузки -->
                    <Border Background="{TemplateBinding Background}" CornerRadius="20" CacheMode="BitmapCache">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF4136"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Анимация для всплывающих элементов -->
    <Storyboard x:Key="PopupAppearStoryboard">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                         From="20" To="0" Duration="0:0:0.3"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="0" To="1" Duration="0:0:0.3"/>
    </Storyboard>
    <Storyboard x:Key="PopupDisappearStoryboard">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                         From="0" To="20" Duration="0:0:0.3"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="1" To="0" Duration="0:0:0.3"/>
    </Storyboard>
    
    <!-- Эффекты тени -->
    <DropShadowEffect x:Key="SurfaceShadowEffect" 
                      BlurRadius="4" 
                      ShadowDepth="0.5" 
                      Direction="270" 
                      Color="#25000000"
                      Opacity="0.4"/>
    <DropShadowEffect x:Key="ControlsPanelShadowEffect" 
                      BlurRadius="2" 
                      ShadowDepth="0.5" 
                      Direction="270" 
                      Color="#20000000"
                      Opacity="0.3"/>
    <DropShadowEffect x:Key="WindowShadowEffect" 
                      BlurRadius="8" 
                      ShadowDepth="0" 
                      Color="Black"
                      Opacity="0.4"/>

    <!-- Стиль современной кнопки -->
    <Style x:Key="ModernButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            Effect="{DynamicResource SurfaceShadowEffect}"
                            CacheMode="BitmapCache">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonHoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="2" 
                                                      Color="#15000000" 
                                                      ShadowDepth="1"
                                                      Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль переключателя (Toggle Switch) -->
    <Style x:Key="ToggleSwitchStyle" TargetType="ToggleButton">
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="#FFE0E0E0"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="BorderBrush" Value="#FF808080"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="14"
                                Effect="{DynamicResource ControlsPanelShadowEffect}"
                                Padding="{TemplateBinding Padding}"
                                CacheMode="BitmapCache">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Ellipse x:Name="ToggleIndicator"
                                Width="20"
                                Height="20"
                                Fill="White"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="4,0,0,0"
                                Effect="{DynamicResource SurfaceShadowEffect}">
                            <Ellipse.RenderTransform>
                                <TranslateTransform x:Name="IndicatorTransform"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorTransform"
                                                         Storyboard.TargetProperty="X"
                                                         To="70"
                                                         Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        To="#FF2196F3"
                                                        Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorTransform"
                                                         Storyboard.TargetProperty="X"
                                                         To="0"
                                                         Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        To="#FFE0E0E0"
                                                        Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль современного слайдера -->
    <Style x:Key="ModernSliderStyle" TargetType="Slider">
        <Setter Property="Height" Value="8"/>
        <Setter Property="Foreground" Value="{DynamicResource SliderForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource SliderBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SliderBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TickPlacement" Value="BottomRight"/>
        <Setter Property="Effect" Value="{DynamicResource ControlsPanelShadowEffect}"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Border 
                            Background="{TemplateBinding Background}"
                            Height="4"
                            VerticalAlignment="Center"
                            CornerRadius="2"
                            CacheMode="BitmapCache"/>
                        <Track Name="PART_Track"
                               Minimum="{TemplateBinding Minimum}"
                               Maximum="{TemplateBinding Maximum}"
                               Value="{TemplateBinding Value}"
                               IsDirectionReversed="False">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{x:Null}" Height="4" VerticalAlignment="Center" Background="{TemplateBinding Foreground}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{x:Null}" Height="4" VerticalAlignment="Center" Background="{TemplateBinding Background}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Width="12" Height="12" Background="{TemplateBinding Foreground}">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Ellipse Fill="{TemplateBinding Background}" Width="12" Height="12" CacheMode="BitmapCache"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="PreviewMouseWheel" Handler="Slider_MouseWheelScroll"/>
    </Style>

    <!-- Стиль современного комбобокса -->
    <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="6"
                                                Effect="{DynamicResource ControlsPanelShadowEffect}"
                                                CacheMode="BitmapCache"/>
                                        <ContentPresenter HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center"
                                                          Margin="2"/>
                                        <Path x:Name="Arrow"
                                              Grid.Column="1"
                                              Fill="{TemplateBinding Foreground}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M 0 0 L 6 6 L 12 0 Z"
                                              RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform x:Name="ArrowRotation" Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ComboBoxHoverBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxHoverBorderBrush}"/>
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="4" 
                                                                      Color="#30000000" 
                                                                      ShadowDepth="1"
                                                                      Opacity="0.5"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ComboBoxPressedBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxPressedBorderBrush}"/>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="ArrowRotation"
                                                                           Storyboard.TargetProperty="Angle"
                                                                           To="180"
                                                                           Duration="0:0:0.2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="ArrowRotation"
                                                                           Storyboard.TargetProperty="Angle"
                                                                           To="0"
                                                                           Duration="0:0:0.2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                                            <Setter Property="Background" Value="{DynamicResource ComboBoxDisabledBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxDisabledBorderBrush}"/>
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="2" 
                                                                      Color="#15000000" 
                                                                      ShadowDepth="1"
                                                                      Opacity="0.2"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="12,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="4,4,24,4"
                                 Focusable="True"
                                 Background="Transparent"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource ComboBoxPopupBackgroundBrush}"
                                        BorderBrush="{DynamicResource ComboBoxPopupBorderBrush}"
                                        BorderThickness="1.5"
                                        CornerRadius="6"
                                        Effect="{DynamicResource SurfaceShadowEffect}"
                                        CacheMode="BitmapCache"/>
                                <ScrollViewer Margin="4,2" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" 
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                Background="Transparent">
                                        <StackPanel.Resources>
                                            <Style TargetType="ComboBoxItem">
                                                <Setter Property="Padding" Value="8,6"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ComboBoxItem">
                                                            <Border x:Name="Border"
                                                                    Background="Transparent"
                                                                    BorderThickness="0"
                                                                    CornerRadius="4"
                                                                    Padding="{TemplateBinding Padding}">
                                                                <ContentPresenter/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="Border" Property="Background" 
                                                                            Value="{DynamicResource ComboBoxItemHoverBackgroundBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter TargetName="Border" Property="Background" 
                                                                            Value="{DynamicResource ComboBoxItemSelectedBackgroundBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </StackPanel.Resources>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="6"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
